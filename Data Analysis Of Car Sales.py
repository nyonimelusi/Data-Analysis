#!/usr/bin/env python
# coding: utf-8

# # .Using Python

# In[ ]:


Steps to Clean and Analyze Car Sales Data
1. Define the obejectives
*  Objective : Understand sales trends, identify top-trending models, and determine the key factors influencing sales

2. Load the data. We first import libraries to be used. # libraries will be pandas  when importing the dataset , analyzing and exploring and manipulating the dataset.
# In[2]:


import pandas as pd
import matplotlib as plb
import numpy as np
import seaborn as sb


# In[6]:


data = pd.read_csv(r"C:\Users\DELL\Downloads\Data+Analytics+of+Car+Project\Data Analytics of Car Project\.ipynb_checkpoints\Car_Data-checkpoint.csv")


# In[7]:


data


# In[8]:


data.head(100)


# In[9]:


data.info()


# In[10]:


data.columns


# In[14]:


pd.isnull(data).sum().head(10)


# # To remove and modify null values
Null - values - mean()
Null - Delete
# In[15]:


data['Sales in thousands'].fillna(data['Sales in thousands'].mean())


# 2. Remove all null values from csv

# In[16]:


data.dropna(inplace=True)


# In[17]:


pd.isnull(data).sum()


# # Analysis of Data

# In[18]:


data['Manufacturer'].value_counts()


# In[21]:


import seaborn as sns
import matplotlib.pyplot as plt

# Sample data structure for reference
# iData = pd.DataFrame({
#     'Manufacturer': ['Toyota', 'Ford', 'BMW', ...],
#     'Vehicle type': ['SUV', 'Sedan', 'Truck', ...],
#     'Other columns': ...
# })

# Set the figure size
plt.figure(figsize=(45, 5))

# Create the count plot
ax = sns.countplot(x='Manufacturer', data=data, hue='Vehicle type')

# Add labels to each bar
for bar_container in ax.containers:
    ax.bar_label(bar_container)

# Rotate x-axis labels if needed for better readability
plt.xticks(rotation=90)

# Show the plot
plt.show()


# In[25]:


data.head()


# In[26]:


data['Engine size'].replace('.',0,inplace=True)


# In[27]:


data['Engine size'].fillna(0)


# In[28]:


data['Engine size'] = data['Engine size'].astype("float")


# In[29]:


data['Engine size'].replace(0,data['Engine size'].mean())


# In[30]:


data.replace('.',0,inplace=True)


# In[31]:


data.replace('',0,inplace=True)


# In[33]:


data['4-year resale value']=data["4-year resale value"].astype("float")


# In[34]:


data['Price in thousands']=data["Price in thousands"].astype("float")


# In[35]:


data['Horsepower']=data["Horsepower"].astype("float")


# In[36]:


data['Wheelbase']=data["Wheelbase"].astype("float")


# In[37]:


data['Width']=data["Width"].astype("float")


# In[38]:


data['Curb weight']=data["Curb weight"].astype("float")


# In[39]:


data['Fuel capacity']=data["Fuel capacity"].astype("float")


# In[40]:


data['Fuel efficiency']=data["4-year resale value"].astype("float")


# In[41]:


data['Length']=data["Length"].astype("float")


# In[42]:


data.head(50)


# In[43]:


data.info()


# In[44]:


data[data["Vehicle type"].isin(['Car'])]


# In[45]:


data[data['Price in thousands']>70.00]  # Filter more than 


# In[46]:


data[~ (data['Price in thousands']>70.00)]  


# In[48]:


sales_graph=data.groupby(['Manufacturer'], as_index=False)['Sales in thousands'].sum().sort_values(by='Sales in thousands',ascending=True)
sb.set(rc={'figure.figsize' :(45,10)})
ax=sb.barplot(x='Manufacturer',y='Sales in thousands',data=sales_graph)


# Maximum sale is generated by Ford

# In[49]:


sales_graph=data.groupby(['Manufacturer','Vehicle type'], as_index=False)['Sales in thousands'].sum().sort_values(by='Sales in thousands',ascending=True)
sb.set(rc={'figure.figsize' :(45,10)})
ax=sb.barplot(x='Manufacturer',y='Sales in thousands',data=sales_graph,hue='Vehicle type')


# In[50]:


sales_graph=data.groupby(['Manufacturer'], as_index=False)['Price in thousands'].sum().sort_values(by='Price in thousands',ascending=True)
sb.set(rc={'figure.figsize' :(45,10)})
ax=sb.barplot(x='Manufacturer',y='Price in thousands',data=sales_graph)


# In[51]:


sales_graph=data.groupby(['Horsepower'], as_index=False)['Sales in thousands'].sum().sort_values(by='Sales in thousands',ascending=False)
sb.set(rc={'figure.figsize' :(45,10)})
ax=sb.barplot(x='Horsepower',y='Sales in thousands',data=sales_graph)


# 150 horse power cars generate more sales

# Maximum price is Mercedes Beinz

# In[ ]:




